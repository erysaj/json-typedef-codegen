// Code generated by jtd-codegen for Swift v0.2.1

import Foundation

public struct Root: Codable {
    /// A description for discriminator
    public var discriminatorWithDescription: RootDiscriminatorWithDescription

    /// A description for enum
    public var enumWithDescription: RootEnumWithDescription

    /// Whereas disregard and contempt for human rights have resulted in
    /// barbarous acts which have outraged the conscience of mankind, and the
    /// advent of a world in which human beings shall enjoy freedom of speech
    /// and belief and freedom from fear and want has been proclaimed as the
    /// highest aspiration of the common people,
    public var longDescription: String

    /// A description for properties
    public var propertiesWithDescription: RootPropertiesWithDescription

    /// A description for ref
    public var refWithDescription: Baz

    /// A description for string
    public var stringWithDescription: String

    enum CodingKeys: String, CodingKey {
        case discriminatorWithDescription = "discriminator_with_description"
        case enumWithDescription = "enum_with_description"
        case longDescription = "long_description"
        case propertiesWithDescription = "properties_with_description"
        case refWithDescription = "ref_with_description"
        case stringWithDescription = "string_with_description"
    }

    init(from decoder: Decoder) throws {
        var container = decoder.container(keyedBy: CodingKeys.self)

        self.discriminatorWithDescription = try container.decode(RootDiscriminatorWithDescription.self, forKey: discriminatorWithDescription)
        self.enumWithDescription = try container.decode(RootEnumWithDescription.self, forKey: enumWithDescription)
        self.longDescription = try container.decode(String.self, forKey: longDescription)
        self.propertiesWithDescription = try container.decode(RootPropertiesWithDescription.self, forKey: propertiesWithDescription)
        self.refWithDescription = try container.decode(Baz.self, forKey: refWithDescription)
        self.stringWithDescription = try container.decode(String.self, forKey: stringWithDescription)
    }

    func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(self.discriminatorWithDescription, forKey: discriminatorWithDescription)
        try container.encode(self.enumWithDescription, forKey: enumWithDescription)
        try container.encode(self.longDescription, forKey: longDescription)
        try container.encode(self.propertiesWithDescription, forKey: propertiesWithDescription)
        try container.encode(self.refWithDescription, forKey: refWithDescription)
        try container.encode(self.stringWithDescription, forKey: stringWithDescription)
    }
}
